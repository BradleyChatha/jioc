before_script:
  - apt-get update
  - if [ "$BUILD_ARCH" = "32" ]; then apt-get install -y gcc-multilib libc6-dev-i386 --no-install-recommends --allow-unauthenticated; fi
  - if [ "$BUILD_ARCH" = "64" ]; then apt-get install -y gcc libc6-dev --no-install-recommends --allow-unauthenticated; fi
  - if [ "$BUILD_ARCH" = "" ]; then echo "NO BUILD_ARCH ENVIRONMENT VARIABLE"; fi
  - curl https://dlang.org/install.sh | bash -s dmd-2.087.1
  - source ~/dlang/dmd-2.087.1/activate
  - dmd --version
  - dub --version

stages:
  - build_debug
  - test
  - build_release

# Make sure the main build types (release, debug, and unittest) work for both architectures.
# I've had issues in the past where some of my code won't compile in both (mostly forgetting to use size_t somewhere) which is why both are tested.
build_debug_x86:
  stage: build_debug
  script:
      - dub build --build=debug --arch=x86
  variables:
      BUILD_ARCH: "32"

build_debug_x64:
  stage: build_debug
  script:
      - dub build --build=debug --arch=x86_64
  variables:
      BUILD_ARCH: "64"

build_release_x86:
  stage: build_release
  script:
      - dub build --build=release --arch=x86
  variables:
      BUILD_ARCH: "32"

build_release_x64:
  stage: build_release
  script:
      - dub build --build=release --arch=x86_64
  variables:
      BUILD_ARCH: "64"

test_x86:
  stage: test
  script:
      - dub test
  variables:
      BUILD_ARCH: "32"

test_x64:
  stage: test
  script:
      - dub test
  variables:
      BUILD_ARCH: "64"
